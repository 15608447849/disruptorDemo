// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `FileTransferService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package bottle.transfer.dts;

/**
 * 思路:
 * 1 客户端 通知服务器  需要上传 保存的文件的路径,文件名 ,文件大小,服务器成功创建此文件大小空间,则返回标识码
 * 2 服务端 开始接受文件
 * 使用 RandomAccessFile ,并保存对象
 * 绑定唯一标识 TAG - RandomAccessFile对象, 存入Map
 * 3 客户端 使用标识与 服务端进行数据传输
 **/
public interface IFileUploadServicePrx extends Ice.ObjectPrx
{
    /**
     * 请求上传文件
     **/
    public String request(FileUploadInfo fui);

    /**
     * 请求上传文件
     * @param __ctx The Context map to send with the invocation.
     **/
    public String request(FileUploadInfo fui, java.util.Map<String, String> __ctx);

    /**
     * 请求上传文件
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui);

    /**
     * 请求上传文件
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui, java.util.Map<String, String> __ctx);

    /**
     * 请求上传文件
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui, Ice.Callback __cb);

    /**
     * 请求上传文件
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 请求上传文件
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui, Callback_IFileUploadService_request __cb);

    /**
     * 请求上传文件
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui, java.util.Map<String, String> __ctx, Callback_IFileUploadService_request __cb);

    /**
     * 请求上传文件
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui, 
                                         IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 请求上传文件
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui, 
                                         IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 请求上传文件
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 请求上传文件
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_request(FileUploadInfo fui, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 请求上传文件
     * @param __result The asynchronous result object.
     **/
    public String end_request(Ice.AsyncResult __result);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     **/
    public void transfer(String tag, long start, byte[] bytes);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __ctx The Context map to send with the invocation.
     **/
    public void transfer(String tag, long start, byte[] bytes, java.util.Map<String, String> __ctx);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, long start, byte[] bytes);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, long start, byte[] bytes, java.util.Map<String, String> __ctx);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, long start, byte[] bytes, Ice.Callback __cb);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, long start, byte[] bytes, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, long start, byte[] bytes, Callback_IFileUploadService_transfer __cb);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, long start, byte[] bytes, java.util.Map<String, String> __ctx, Callback_IFileUploadService_transfer __cb);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, 
                                          long start, 
                                          byte[] bytes, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, 
                                          long start, 
                                          byte[] bytes, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, 
                                          long start, 
                                          byte[] bytes, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_transfer(String tag, 
                                          long start, 
                                          byte[] bytes, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 上传文件数据片段
     * tag 文件远程标识
     * start 起点
     * bytes 字节数据
     * @param __result The asynchronous result object.
     **/
    public void end_transfer(Ice.AsyncResult __result);

    /**
     * 上传完成
     **/
    public void complete(String tag);

    /**
     * 上传完成
     * @param __ctx The Context map to send with the invocation.
     **/
    public void complete(String tag, java.util.Map<String, String> __ctx);

    /**
     * 上传完成
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag);

    /**
     * 上传完成
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag, java.util.Map<String, String> __ctx);

    /**
     * 上传完成
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag, Ice.Callback __cb);

    /**
     * 上传完成
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 上传完成
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag, Callback_IFileUploadService_complete __cb);

    /**
     * 上传完成
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag, java.util.Map<String, String> __ctx, Callback_IFileUploadService_complete __cb);

    /**
     * 上传完成
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 上传完成
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 上传完成
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 上传完成
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_complete(String tag, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 上传完成
     * @param __result The asynchronous result object.
     **/
    public void end_complete(Ice.AsyncResult __result);
}
