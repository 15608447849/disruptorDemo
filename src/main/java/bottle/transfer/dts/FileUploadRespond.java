// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `DataTransferService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package bottle.transfer.dts;

public class FileUploadRespond implements java.lang.Cloneable, java.io.Serializable
{
    public String tag;

    public TransferSequence[] array;

    public FileUploadRespond()
    {
        tag = "";
    }

    public FileUploadRespond(String tag, TransferSequence[] array)
    {
        this.tag = tag;
        this.array = array;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FileUploadRespond _r = null;
        if(rhs instanceof FileUploadRespond)
        {
            _r = (FileUploadRespond)rhs;
        }

        if(_r != null)
        {
            if(tag != _r.tag)
            {
                if(tag == null || _r.tag == null || !tag.equals(_r.tag))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(array, _r.array))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::dts::FileUploadRespond");
        __h = IceInternal.HashUtil.hashAdd(__h, tag);
        __h = IceInternal.HashUtil.hashAdd(__h, array);
        return __h;
    }

    public FileUploadRespond
    clone()
    {
        FileUploadRespond c = null;
        try
        {
            c = (FileUploadRespond)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(tag);
        SliceArraysHelper.write(__os, array);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        tag = __is.readString();
        array = SliceArraysHelper.read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, FileUploadRespond __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public FileUploadRespond
    __read(IceInternal.BasicStream __is, FileUploadRespond __v)
    {
        if(__v == null)
        {
             __v = new FileUploadRespond();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final FileUploadRespond __nullMarshalValue = new FileUploadRespond();

    public static final long serialVersionUID = 900086071L;
}
